name: Build FitnessApp.SettingsApi image

on:
  push:
    branches:
    - master
    - develop
      
jobs:
  build:
    runs-on: ubuntu-20.04
    
    services:
      mongo-db:
        image: mongo
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name mongo_container
          
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
         dotnet-version: 8.0.x
        
      - name: Prepare package
        run: dotnet nuget add source --username voldovgan2 --password ${{ secrets.PACKAGE_SOURCE_PASSWORD }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/voldovgan2/index.json"
            
      - name: Restore dependencies
        run: dotnet restore
      
      - name: Build project 
        run: dotnet build FitnessApp.SettingsApi.sln -c Release --no-restore
      
      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
        env:
          Minio__Endpoint: minio:9000
          Minio__AccessKey: minioadmin
          Minio__SecretKey: minioadmin
          Minio__Secure: False
          MongoConnection__ConnectionString: mongodb://localhost:27017
        
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: '35 100'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push develop
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile  
          build-args: |
            NUGET_PAT=${{ secrets.PACKAGE_SOURCE_PASSWORD }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fitness-app-settings-api:alpha
          
      - name: Build and push latest
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile  
          build-args: |
            NUGET_PAT=${{ secrets.PACKAGE_SOURCE_PASSWORD }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fitness-app-settings-api:latest
